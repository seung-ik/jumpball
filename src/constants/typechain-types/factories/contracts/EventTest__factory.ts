/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { EventTest, EventTestInterface } from "../../contracts/EventTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "token",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewExchange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token",
        type: "string",
      },
    ],
    name: "createExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getExchange",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061085c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630b9d58471461003b5780637048233a1461006b575b600080fd5b610055600480360381019061005091906101f7565b610087565b60405161006291906102b4565b60405180910390f35b6100856004803603810190610080919061040b565b610127565b005b600160205280600052604060002060009150905080546100a690610483565b80601f01602080910402602001604051908101604052809291908181526020018280546100d290610483565b801561011f5780601f106100f45761010080835404028352916020019161011f565b820191906000526020600020905b81548152906001019060200180831161010257829003601f168201915b505050505081565b8060016000806000815461013a906104e3565b9190508190558152602001908152602001600020908161015a91906106d7565b508060405161016991906107e5565b60405180910390207fb762a0c7e1b2bee7862c20783684fae6618f2284cc9ebf076fdca7ec48526b2a6000546040516101a2919061080b565b60405180910390a250565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6101d4816101c1565b81146101df57600080fd5b50565b6000813590506101f1816101cb565b92915050565b60006020828403121561020d5761020c6101b7565b5b600061021b848285016101e2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561025e578082015181840152602081019050610243565b60008484015250505050565b6000601f19601f8301169050919050565b600061028682610224565b610290818561022f565b93506102a0818560208601610240565b6102a98161026a565b840191505092915050565b600060208201905081810360008301526102ce818461027b565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103188261026a565b810181811067ffffffffffffffff82111715610337576103366102e0565b5b80604052505050565b600061034a6101ad565b9050610356828261030f565b919050565b600067ffffffffffffffff821115610376576103756102e0565b5b61037f8261026a565b9050602081019050919050565b82818337600083830152505050565b60006103ae6103a98461035b565b610340565b9050828152602081018484840111156103ca576103c96102db565b5b6103d584828561038c565b509392505050565b600082601f8301126103f2576103f16102d6565b5b813561040284826020860161039b565b91505092915050565b600060208284031215610421576104206101b7565b5b600082013567ffffffffffffffff81111561043f5761043e6101bc565b5b61044b848285016103dd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061049b57607f821691505b6020821081036104ae576104ad610454565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104ee826101c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105205761051f6104b4565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261058d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610550565b6105978683610550565b95508019841693508086168417925050509392505050565b6000819050919050565b60006105d46105cf6105ca846101c1565b6105af565b6101c1565b9050919050565b6000819050919050565b6105ee836105b9565b6106026105fa826105db565b84845461055d565b825550505050565b600090565b61061761060a565b6106228184846105e5565b505050565b5b818110156106465761063b60008261060f565b600181019050610628565b5050565b601f82111561068b5761065c8161052b565b61066584610540565b81016020851015610674578190505b61068861068085610540565b830182610627565b50505b505050565b600082821c905092915050565b60006106ae60001984600802610690565b1980831691505092915050565b60006106c7838361069d565b9150826002028217905092915050565b6106e082610224565b67ffffffffffffffff8111156106f9576106f86102e0565b5b6107038254610483565b61070e82828561064a565b600060209050601f831160018114610741576000841561072f578287015190505b61073985826106bb565b8655506107a1565b601f19841661074f8661052b565b60005b8281101561077757848901518255600182019150602085019450602081019050610752565b868310156107945784890151610790601f89168261069d565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006107bf82610224565b6107c981856107a9565b93506107d9818560208601610240565b80840191505092915050565b60006107f182846107b4565b915081905092915050565b610805816101c1565b82525050565b600060208201905061082060008301846107fc565b9291505056fea2646970667358221220db3bb9b41bd4b7d94aef5534b8075cb6291e253d2c6920bf331363e2921fadd764736f6c63430008110033";

type EventTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventTest__factory extends ContractFactory {
  constructor(...args: EventTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventTest> {
    return super.deploy(overrides || {}) as Promise<EventTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventTest {
    return super.attach(address) as EventTest;
  }
  override connect(signer: Signer): EventTest__factory {
    return super.connect(signer) as EventTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventTestInterface {
    return new utils.Interface(_abi) as EventTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventTest {
    return new Contract(address, _abi, signerOrProvider) as EventTest;
  }
}
