/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TTOT_Concert_V1,
  TTOT_Concert_V1Interface,
} from "../../contracts/TTOT_Concert_V1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyFeesInBips",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_artistAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_concertName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_limitOfDate",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_limitOfSeat",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketFactoryCA",
    outputs: [
      {
        internalType: "contract TTOT_FACTORY_V1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196438038062001964833981810160405281019062000037919062000574565b84600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180608001604052808481526020018381526020018261ffff16815260200160016002811115620000b057620000af6200062f565b5b81525060036000820151816000019080519060200190620000d3929190620001ff565b506020820151816001015560408201518160020160006101000a81548161ffff021916908361ffff16021790555060608201518160020160026101000a81548160ff021916908360028111156200012f576200012e6200062f565b5b021790555090505060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001876bffffffffffffffffffffffff16815250600660008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050505050505050620006c3565b8280546200020d906200068d565b90600052602060002090601f0160209004810192826200023157600085556200027d565b82601f106200024c57805160ff19168380011785556200027d565b828001600101855582156200027d579182015b828111156200027c5782518255916020019190600101906200025f565b5b5090506200028c919062000290565b5090565b5b80821115620002ab57600081600090555060010162000291565b5090565b6000604051905090565b600080fd5b600080fd5b60006bffffffffffffffffffffffff82169050919050565b620002e681620002c3565b8114620002f257600080fd5b50565b6000815190506200030681620002db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000339826200030c565b9050919050565b6200034b816200032c565b81146200035757600080fd5b50565b6000815190506200036b8162000340565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c6826200037b565b810181811067ffffffffffffffff82111715620003e857620003e76200038c565b5b80604052505050565b6000620003fd620002af565b90506200040b8282620003bb565b919050565b600067ffffffffffffffff8211156200042e576200042d6200038c565b5b62000439826200037b565b9050602081019050919050565b60005b838110156200046657808201518184015260208101905062000449565b8381111562000476576000848401525b50505050565b6000620004936200048d8462000410565b620003f1565b905082815260208101848484011115620004b257620004b162000376565b5b620004bf84828562000446565b509392505050565b600082601f830112620004df57620004de62000371565b5b8151620004f18482602086016200047c565b91505092915050565b6000819050919050565b6200050f81620004fa565b81146200051b57600080fd5b50565b6000815190506200052f8162000504565b92915050565b600061ffff82169050919050565b6200054e8162000535565b81146200055a57600080fd5b50565b6000815190506200056e8162000543565b92915050565b60008060008060008060c08789031215620005945762000593620002b9565b5b6000620005a489828a01620002f5565b9650506020620005b789828a016200035a565b9550506040620005ca89828a016200035a565b945050606087015167ffffffffffffffff811115620005ee57620005ed620002be565b5b620005fc89828a01620004c7565b93505060806200060f89828a016200051e565b92505060a06200062289828a016200055d565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006a657607f821691505b60208210811415620006bd57620006bc6200065e565b5b50919050565b61129180620006d36000396000f3fe6080604052600436106100555760003560e01c806301ffc9a71461005a57806317fcfe22146100975780631bd1178e146100c05780632a55205a146100eb578063e5afe3e614610129578063efef39a114610166575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610beb565b610182565b60405161008e9190610c33565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190610c84565b6101fc565b005b3480156100cc57600080fd5b506100d561047f565b6040516100e29190610d43565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610c84565b6104a5565b604051610120929190610d8e565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b9190610db7565b610690565b60405161015d9190610de4565b60405180910390f35b610180600480360381019061017b9190610db7565b6106a8565b005b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101f557506101f482610b1a565b5b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161026e9190610de4565b60206040518083038186803b15801561028657600080fd5b505afa15801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be9190610e2b565b73ffffffffffffffffffffffffffffffffffffffff1614610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610eb5565b60405180910390fd5b60008111610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90610f21565b60405180910390fd5b60006008600084815260200190815260200160002054146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610f8d565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161040a929190610fad565b60206040518083038186803b15801561042257600080fd5b505afa158015610436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045a9190611002565b61046357600080fd5b8060086000848152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600760008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16141561063b5760066040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152505090505b6000610645610b84565b6bffffffffffffffffffffffff1682602001516bffffffffffffffffffffffff1686610671919061105e565b61067b91906110e7565b90508160000151819350935050509250929050565b60086020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161071a9190610de4565b60206040518083038186803b15801561073257600080fd5b505afa158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076a9190610e2b565b73ffffffffffffffffffffffffffffffffffffffff1614156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890610eb5565b60405180910390fd5b6000600860008381526020019081526020016000205411610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90611164565b60405180910390fd5b346008600083815260200190815260200160002054111561086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906111d0565b60405180910390fd5b60008061087a83346104a5565b915091508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108c4573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016109209190610de4565b60206040518083038186803b15801561093857600080fd5b505afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109709190610e2b565b73ffffffffffffffffffffffffffffffffffffffff166108fc823461099591906111f0565b9081150290604051600060405180830381858888f193505050501580156109c0573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610a5a9190610de4565b60206040518083038186803b158015610a7257600080fd5b505afa158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190610e2b565b33866040518463ffffffff1660e01b8152600401610aca93929190611224565b600060405180830381600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b5050505060006008600085815260200190815260200160002081905550505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000612710905090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bc881610b93565b8114610bd357600080fd5b50565b600081359050610be581610bbf565b92915050565b600060208284031215610c0157610c00610b8e565b5b6000610c0f84828501610bd6565b91505092915050565b60008115159050919050565b610c2d81610c18565b82525050565b6000602082019050610c486000830184610c24565b92915050565b6000819050919050565b610c6181610c4e565b8114610c6c57600080fd5b50565b600081359050610c7e81610c58565b92915050565b60008060408385031215610c9b57610c9a610b8e565b5b6000610ca985828601610c6f565b9250506020610cba85828601610c6f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d09610d04610cff84610cc4565b610ce4565b610cc4565b9050919050565b6000610d1b82610cee565b9050919050565b6000610d2d82610d10565b9050919050565b610d3d81610d22565b82525050565b6000602082019050610d586000830184610d34565b92915050565b6000610d6982610cc4565b9050919050565b610d7981610d5e565b82525050565b610d8881610c4e565b82525050565b6000604082019050610da36000830185610d70565b610db06020830184610d7f565b9392505050565b600060208284031215610dcd57610dcc610b8e565b5b6000610ddb84828501610c6f565b91505092915050565b6000602082019050610df96000830184610d7f565b92915050565b610e0881610d5e565b8114610e1357600080fd5b50565b600081519050610e2581610dff565b92915050565b600060208284031215610e4157610e40610b8e565b5b6000610e4f84828501610e16565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420746f6b656e206f776e65722e000000000000600082015250565b6000610e9f601a83610e58565b9150610eaa82610e69565b602082019050919050565b60006020820190508181036000830152610ece81610e92565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f2e600082015250565b6000610f0b602083610e58565b9150610f1682610ed5565b602082019050919050565b60006020820190508181036000830152610f3a81610efe565b9050919050565b7f416c72656164792073616c650000000000000000000000000000000000000000600082015250565b6000610f77600c83610e58565b9150610f8282610f41565b602082019050919050565b60006020820190508181036000830152610fa681610f6a565b9050919050565b6000604082019050610fc26000830185610d70565b610fcf6020830184610d70565b9392505050565b610fdf81610c18565b8114610fea57600080fd5b50565b600081519050610ffc81610fd6565b92915050565b60006020828403121561101857611017610b8e565b5b600061102684828501610fed565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106982610c4e565b915061107483610c4e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110ad576110ac61102f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110f282610c4e565b91506110fd83610c4e565b92508261110d5761110c6110b8565b5b828204905092915050565b7f4e6f742073616c652e0000000000000000000000000000000000000000000000600082015250565b600061114e600983610e58565b915061115982611118565b602082019050919050565b6000602082019050818103600083015261117d81611141565b9050919050565b7f43616c6c65722073656e74206c6f776572207468616e2070726963652e000000600082015250565b60006111ba601d83610e58565b91506111c582611184565b602082019050919050565b600060208201905081810360008301526111e9816111ad565b9050919050565b60006111fb82610c4e565b915061120683610c4e565b9250828210156112195761121861102f565b5b828203905092915050565b60006060820190506112396000830186610d70565b6112466020830185610d70565b6112536040830184610d7f565b94935050505056fea2646970667358221220e852d17063964ce91a27897faa1cd4274acec120d54eecc219efaad19e3879c764736f6c63430008090033";

type TTOT_Concert_V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TTOT_Concert_V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TTOT_Concert_V1__factory extends ContractFactory {
  constructor(...args: TTOT_Concert_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _royaltyFeesInBips: PromiseOrValue<BigNumberish>,
    _nftContractAddress: PromiseOrValue<string>,
    _artistAddress: PromiseOrValue<string>,
    _concertName: PromiseOrValue<string>,
    _limitOfDate: PromiseOrValue<BigNumberish>,
    _limitOfSeat: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TTOT_Concert_V1> {
    return super.deploy(
      _royaltyFeesInBips,
      _nftContractAddress,
      _artistAddress,
      _concertName,
      _limitOfDate,
      _limitOfSeat,
      overrides || {}
    ) as Promise<TTOT_Concert_V1>;
  }
  override getDeployTransaction(
    _royaltyFeesInBips: PromiseOrValue<BigNumberish>,
    _nftContractAddress: PromiseOrValue<string>,
    _artistAddress: PromiseOrValue<string>,
    _concertName: PromiseOrValue<string>,
    _limitOfDate: PromiseOrValue<BigNumberish>,
    _limitOfSeat: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _royaltyFeesInBips,
      _nftContractAddress,
      _artistAddress,
      _concertName,
      _limitOfDate,
      _limitOfSeat,
      overrides || {}
    );
  }
  override attach(address: string): TTOT_Concert_V1 {
    return super.attach(address) as TTOT_Concert_V1;
  }
  override connect(signer: Signer): TTOT_Concert_V1__factory {
    return super.connect(signer) as TTOT_Concert_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTOT_Concert_V1Interface {
    return new utils.Interface(_abi) as TTOT_Concert_V1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TTOT_Concert_V1 {
    return new Contract(address, _abi, signerOrProvider) as TTOT_Concert_V1;
  }
}
