/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Jumpball,
  JumpballInterface,
} from "../../../../contracts/jumpball/JumpBall.sol/Jumpball";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_date",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_match",
        type: "string",
      },
      {
        internalType: "string",
        name: "_home",
        type: "string",
      },
      {
        internalType: "string",
        name: "_away",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isHome",
        type: "bool",
      },
    ],
    name: "betting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "typeAndId",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "home",
            type: "string",
          },
          {
            internalType: "string",
            name: "away",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "enum Jumpball.progressType",
            name: "completed",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "homeSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "awaySum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "harvestedSum",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
        ],
        internalType: "struct Jumpball.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "getMyBetInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "harvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_win",
        type: "bool",
      },
    ],
    name: "validateGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612192806100606000396000f3fe6080604052600436106100555760003560e01c80630e93353e1461005a5780636dcda409146100985780638da5cb5b146100c8578063c8575751146100f3578063e4bbb3e414610130578063fb41dd801461016d575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906114ed565b610196565b60405161008f92919061154f565b60405180910390f35b6100b260048036038101906100ad91906115dc565b610260565b6040516100bf91906116e8565b60405180910390f35b3480156100d457600080fd5b506100dd610616565b6040516100ea9190611744565b60405180910390f35b3480156100ff57600080fd5b5061011a600480360381019061011591906114ed565b61063a565b6040516101279190611962565b60405180910390f35b34801561013c57600080fd5b50610157600480360381019061015291906114ed565b610974565b6040516101649190611984565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f919061199f565b610ef3565b005b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040516101e69190611a37565b908152602001604051809103902060010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516102459190611a37565b90815260200160405180910390206002015491509150915091565b600061026b87611146565b61027d5761027c8787878787611184565b5b600034116102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790611aab565b60405180910390fd5b6102c987611146565b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90611b17565b60405180910390fd5b426001886040516103199190611a37565b9081526020016040518091039020600401541161033557600080fd5b60006002811115610349576103486117ed565b5b6001886040516103599190611a37565b908152602001604051809103902060050160009054906101000a900460ff16600281111561038a576103896117ed565b5b146103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190611b83565b60405180910390fd5b81156104ee57346001886040516103e19190611a37565b908152602001604051809103902060060160008282546104019190611bd2565b9250508190555086600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020886040516104569190611a37565b908152602001604051809103902060000190816104739190611e12565b5034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020886040516104c29190611a37565b908152602001604051809103902060010160008282546104e29190611bd2565b92505081905550610608565b346001886040516104ff9190611a37565b9081526020016040518091039020600701600082825461051f9190611bd2565b9250508190555086600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020886040516105749190611a37565b908152602001604051809103902060000190816105919190611e12565b5034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020886040516105e09190611a37565b908152602001604051809103902060020160008282546106009190611bd2565b925050819055505b600190509695505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610642611318565b6001826040516106529190611a37565b90815260200160405180910390206040518061014001604052908160008201805461067c90611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546106a890611c35565b80156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b5050505050815260200160018201805461070e90611c35565b80601f016020809104026020016040519081016040528092919081815260200182805461073a90611c35565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b505050505081526020016002820180546107a090611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611c35565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b5050505050815260200160038201805461083290611c35565b80601f016020809104026020016040519081016040528092919081815260200182805461085e90611c35565b80156108ab5780601f10610880576101008083540402835291602001916108ab565b820191906000526020600020905b81548152906001019060200180831161088e57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660028111156108e3576108e26117ed565b5b60028111156108f5576108f46117ed565b5b81526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000806002811115610989576109886117ed565b5b6001836040516109999190611a37565b908152602001604051809103902060050160009054906101000a900460ff1660028111156109ca576109c96117ed565b5b03610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0190611f30565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604051610a579190611a37565b908152602001604051809103902060030160009054906101000a900460ff1615610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90611f9c565b60405180910390fd5b600060016002811115610acc57610acb6117ed565b5b600184604051610adc9190611a37565b908152602001604051809103902060050160009054906101000a900460ff166002811115610b0d57610b0c6117ed565b5b14610b19576000610b1c565b60015b90508015610d0b576000600184604051610b369190611a37565b908152602001604051809103902060060154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610b959190611a37565b908152602001604051809103902060010154610bb19190611feb565b600185604051610bc19190611a37565b908152602001604051809103902060070154600186604051610be39190611a37565b908152602001604051809103902060060154610bff9190611bd2565b610c09919061201c565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c51573d6000803e3d6000fd5b5080600185604051610c639190611a37565b90815260200160405180910390206008016000828254610c839190611bd2565b925050819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610cd99190611a37565b908152602001604051809103902060030160006101000a81548160ff0219169083151502179055508092505050610eee565b6000600184604051610d1d9190611a37565b908152602001604051809103902060070154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610d7c9190611a37565b908152602001604051809103902060020154610d989190611feb565b600185604051610da89190611a37565b908152602001604051809103902060070154600186604051610dca9190611a37565b908152602001604051809103902060060154610de69190611bd2565b610df0919061201c565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e38573d6000803e3d6000fd5b5080600185604051610e4a9190611a37565b90815260200160405180910390206008016000828254610e6a9190611bd2565b925050819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610ec09190611a37565b908152602001604051809103902060030160006101000a81548160ff02191690831515021790555080925050505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f78906120d0565b60405180910390fd5b42600183604051610f929190611a37565b90815260200160405180910390206004015410610fae57600080fd5b60006002811115610fc257610fc16117ed565b5b600183604051610fd29190611a37565b908152602001604051809103902060050160009054906101000a900460ff166002811115611003576110026117ed565b5b14611043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103a9061213c565b60405180910390fd5b8015611097576001808360405161105a9190611a37565b908152602001604051809103902060050160006101000a81548160ff0219169083600281111561108d5761108c6117ed565b5b02179055506110e2565b60026001836040516110a99190611a37565b908152602001604051809103902060050160006101000a81548160ff021916908360028111156110dc576110db6117ed565b5b02179055505b336001836040516110f39190611a37565b908152602001604051809103902060090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806001836040516111599190611a37565b908152602001604051809103902060040154111561117a576001905061117f565b600090505b919050565b604051806101400160405280868152602001848152602001838152602001828152602001858152602001600060028111156111c2576111c16117ed565b5b8152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152506001866040516112079190611a37565b9081526020016040518091039020600082015181600001908161122a9190611e12565b5060208201518160010190816112409190611e12565b5060408201518160020190816112569190611e12565b50606082015181600301908161126c9190611e12565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360028111156112a2576112a16117ed565b5b021790555060c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050565b60405180610140016040528060608152602001606081526020016060815260200160608152602001600081526020016000600281111561135b5761135a6117ed565b5b8152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113fa826113b1565b810181811067ffffffffffffffff82111715611419576114186113c2565b5b80604052505050565b600061142c611393565b905061143882826113f1565b919050565b600067ffffffffffffffff821115611458576114576113c2565b5b611461826113b1565b9050602081019050919050565b82818337600083830152505050565b600061149061148b8461143d565b611422565b9050828152602081018484840111156114ac576114ab6113ac565b5b6114b784828561146e565b509392505050565b600082601f8301126114d4576114d36113a7565b5b81356114e484826020860161147d565b91505092915050565b6000602082840312156115035761150261139d565b5b600082013567ffffffffffffffff811115611521576115206113a2565b5b61152d848285016114bf565b91505092915050565b6000819050919050565b61154981611536565b82525050565b60006040820190506115646000830185611540565b6115716020830184611540565b9392505050565b61158181611536565b811461158c57600080fd5b50565b60008135905061159e81611578565b92915050565b60008115159050919050565b6115b9816115a4565b81146115c457600080fd5b50565b6000813590506115d6816115b0565b92915050565b60008060008060008060c087890312156115f9576115f861139d565b5b600087013567ffffffffffffffff811115611617576116166113a2565b5b61162389828a016114bf565b965050602061163489828a0161158f565b955050604087013567ffffffffffffffff811115611655576116546113a2565b5b61166189828a016114bf565b945050606087013567ffffffffffffffff811115611682576116816113a2565b5b61168e89828a016114bf565b935050608087013567ffffffffffffffff8111156116af576116ae6113a2565b5b6116bb89828a016114bf565b92505060a06116cc89828a016115c7565b9150509295509295509295565b6116e2816115a4565b82525050565b60006020820190506116fd60008301846116d9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061172e82611703565b9050919050565b61173e81611723565b82525050565b60006020820190506117596000830184611735565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561179957808201518184015260208101905061177e565b60008484015250505050565b60006117b08261175f565b6117ba818561176a565b93506117ca81856020860161177b565b6117d3816113b1565b840191505092915050565b6117e781611536565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061182d5761182c6117ed565b5b50565b600081905061183e8261181c565b919050565b600061184e82611830565b9050919050565b61185e81611843565b82525050565b61186d81611723565b82525050565b600061014083016000830151848203600086015261189182826117a5565b915050602083015184820360208601526118ab82826117a5565b915050604083015184820360408601526118c582826117a5565b915050606083015184820360608601526118df82826117a5565b91505060808301516118f460808601826117de565b5060a083015161190760a0860182611855565b5060c083015161191a60c08601826117de565b5060e083015161192d60e08601826117de565b506101008301516119426101008601826117de565b50610120830151611957610120860182611864565b508091505092915050565b6000602082019050818103600083015261197c8184611873565b905092915050565b60006020820190506119996000830184611540565b92915050565b600080604083850312156119b6576119b561139d565b5b600083013567ffffffffffffffff8111156119d4576119d36113a2565b5b6119e0858286016114bf565b92505060206119f1858286016115c7565b9150509250929050565b600081905092915050565b6000611a118261175f565b611a1b81856119fb565b9350611a2b81856020860161177b565b80840191505092915050565b6000611a438284611a06565b915081905092915050565b600082825260208201905092915050565b7f6e6f7420616c6c6f77656420302076616c756500000000000000000000000000600082015250565b6000611a95601383611a4e565b9150611aa082611a5f565b602082019050919050565b60006020820190508181036000830152611ac481611a88565b9050919050565b7f6e6f7420656e726f6c6c65642069640000000000000000000000000000000000600082015250565b6000611b01600f83611a4e565b9150611b0c82611acb565b602082019050919050565b60006020820190508181036000830152611b3081611af4565b9050919050565b7f616c72656164792076616c696461746564000000000000000000000000000000600082015250565b6000611b6d601183611a4e565b9150611b7882611b37565b602082019050919050565b60006020820190508181036000830152611b9c81611b60565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bdd82611536565b9150611be883611536565b9250828201905080821115611c0057611bff611ba3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c4d57607f821691505b602082108103611c6057611c5f611c06565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611cc87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c8b565b611cd28683611c8b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d0f611d0a611d0584611536565b611cea565b611536565b9050919050565b6000819050919050565b611d2983611cf4565b611d3d611d3582611d16565b848454611c98565b825550505050565b600090565b611d52611d45565b611d5d818484611d20565b505050565b5b81811015611d8157611d76600082611d4a565b600181019050611d63565b5050565b601f821115611dc657611d9781611c66565b611da084611c7b565b81016020851015611daf578190505b611dc3611dbb85611c7b565b830182611d62565b50505b505050565b600082821c905092915050565b6000611de960001984600802611dcb565b1980831691505092915050565b6000611e028383611dd8565b9150826002028217905092915050565b611e1b8261175f565b67ffffffffffffffff811115611e3457611e336113c2565b5b611e3e8254611c35565b611e49828285611d85565b600060209050601f831160018114611e7c5760008415611e6a578287015190505b611e748582611df6565b865550611edc565b601f198416611e8a86611c66565b60005b82811015611eb257848901518255600182019150602085019450602081019050611e8d565b86831015611ecf5784890151611ecb601f891682611dd8565b8355505b6001600288020188555050505b505050505050565b7f6e6f742076616c69646174656400000000000000000000000000000000000000600082015250565b6000611f1a600d83611a4e565b9150611f2582611ee4565b602082019050919050565b60006020820190508181036000830152611f4981611f0d565b9050919050565b7f616c726561647920686172766573746564000000000000000000000000000000600082015250565b6000611f86601183611a4e565b9150611f9182611f50565b602082019050919050565b60006020820190508181036000830152611fb581611f79565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff682611536565b915061200183611536565b92508261201157612010611fbc565b5b828204905092915050565b600061202782611536565b915061203283611536565b925082820261204081611536565b9150828204841483151761205757612056611ba3565b5b5092915050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e2e0000000000000000000000000000000000602082015250565b60006120ba602f83611a4e565b91506120c58261205e565b604082019050919050565b600060208201905081810360008301526120e9816120ad565b9050919050565b7f616c656164792076616c69646174656400000000000000000000000000000000600082015250565b6000612126601083611a4e565b9150612131826120f0565b602082019050919050565b6000602082019050818103600083015261215581612119565b905091905056fea26469706673582212209685504acc557c2213d0c8941e993c5feae04c94c49d6760daa5472cedd6640d64736f6c63430008110033";

type JumpballConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JumpballConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Jumpball__factory extends ContractFactory {
  constructor(...args: JumpballConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Jumpball> {
    return super.deploy(overrides || {}) as Promise<Jumpball>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Jumpball {
    return super.attach(address) as Jumpball;
  }
  override connect(signer: Signer): Jumpball__factory {
    return super.connect(signer) as Jumpball__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpballInterface {
    return new utils.Interface(_abi) as JumpballInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Jumpball {
    return new Contract(address, _abi, signerOrProvider) as Jumpball;
  }
}
