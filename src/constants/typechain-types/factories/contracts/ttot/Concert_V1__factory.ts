/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Concert_V1,
  Concert_V1Interface,
} from "../../../contracts/ttot/Concert_V1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyFeesInBips",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_artistAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_concertName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limitOfDate",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_availableSeats",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketFactoryCA",
    outputs: [
      {
        internalType: "contract Factory_V1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketInfo",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limitOfDate",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "availableSeats",
        type: "uint16",
      },
      {
        internalType: "enum Concert_V1.TicketStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0738038062001e078339818101604052810190620000379190620004c4565b85600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a001604052808581526020018481526020018381526020018261ffff16815260200160016002811115620000b657620000b562000596565b5b81525060036000820151816000019081620000d2919062000806565b50602082015181600101556040820151816002015560608201518160030160006101000a81548161ffff021916908361ffff16021790555060808201518160030160026101000a81548160ff0219169083600281111562000138576200013762000596565b5b021790555090505060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001886bffffffffffffffffffffffff16815250600760008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505050505050505050620008ed565b6000604051905090565b600080fd5b600080fd5b60006bffffffffffffffffffffffff82169050919050565b62000240816200021d565b81146200024c57600080fd5b50565b600081519050620002608162000235565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002938262000266565b9050919050565b620002a58162000286565b8114620002b157600080fd5b50565b600081519050620002c5816200029a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032082620002d5565b810181811067ffffffffffffffff82111715620003425762000341620002e6565b5b80604052505050565b60006200035762000209565b905062000365828262000315565b919050565b600067ffffffffffffffff821115620003885762000387620002e6565b5b6200039382620002d5565b9050602081019050919050565b60005b83811015620003c0578082015181840152602081019050620003a3565b60008484015250505050565b6000620003e3620003dd846200036a565b6200034b565b905082815260208101848484011115620004025762000401620002d0565b5b6200040f848285620003a0565b509392505050565b600082601f8301126200042f576200042e620002cb565b5b815162000441848260208601620003cc565b91505092915050565b6000819050919050565b6200045f816200044a565b81146200046b57600080fd5b50565b6000815190506200047f8162000454565b92915050565b600061ffff82169050919050565b6200049e8162000485565b8114620004aa57600080fd5b50565b600081519050620004be8162000493565b92915050565b600080600080600080600060e0888a031215620004e657620004e562000213565b5b6000620004f68a828b016200024f565b9750506020620005098a828b01620002b4565b96505060406200051c8a828b01620002b4565b955050606088015167ffffffffffffffff81111562000540576200053f62000218565b5b6200054e8a828b0162000417565b9450506080620005618a828b016200046e565b93505060a0620005748a828b016200046e565b92505060c0620005878a828b01620004ad565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200061857607f821691505b6020821081036200062e576200062d620005d0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000659565b620006a4868362000659565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006e7620006e1620006db846200044a565b620006bc565b6200044a565b9050919050565b6000819050919050565b6200070383620006c6565b6200071b6200071282620006ee565b84845462000666565b825550505050565b600090565b6200073262000723565b6200073f818484620006f8565b505050565b5b8181101562000767576200075b60008262000728565b60018101905062000745565b5050565b601f821115620007b657620007808162000634565b6200078b8462000649565b810160208510156200079b578190505b620007b3620007aa8562000649565b83018262000744565b50505b505050565b600082821c905092915050565b6000620007db60001984600802620007bb565b1980831691505092915050565b6000620007f68383620007c8565b9150826002028217905092915050565b6200081182620005c5565b67ffffffffffffffff8111156200082d576200082c620002e6565b5b620008398254620005ff565b620008468282856200076b565b600060209050601f8311600181146200087e576000841562000869578287015190505b620008758582620007e8565b865550620008e5565b601f1984166200088e8662000634565b60005b82811015620008b85784890151825560018201915060208501945060208101905062000891565b86831015620008d85784890151620008d4601f891682620007c8565b8355505b6001600288020188555050505b505050505050565b61150a80620008fd6000396000f3fe6080604052600436106100705760003560e01c80632a55205a1161004e5780632a55205a14610106578063e5afe3e614610144578063ea76348414610181578063efef39a1146101b057610070565b806301ffc9a71461007557806317fcfe22146100b25780631bd1178e146100db575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610caf565b6101cc565b6040516100a99190610cf7565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610d48565b610246565b005b3480156100e757600080fd5b506100f06104ab565b6040516100fd9190610e07565b60405180910390f35b34801561011257600080fd5b5061012d60048036038101906101289190610d48565b6104d1565b60405161013b929190610e52565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190610e7b565b6106bb565b6040516101789190610ea8565b60405180910390f35b34801561018d57600080fd5b506101966106d3565b6040516101a7959493929190610fe7565b60405180910390f35b6101ca60048036038101906101c59190610e7b565b61079a565b005b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061023f575061023e82610bde565b5b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102b89190610ea8565b602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f9919061106d565b73ffffffffffffffffffffffffffffffffffffffff161461034f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610346906110e6565b60405180910390fd5b60008111610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990611152565b60405180910390fd5b60006009600084815260200190815260200160002054146103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df906111be565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016104459291906111de565b602060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190611233565b61048f57600080fd5b8060096000848152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600860008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036106665760076040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152505090505b6000610670610c48565b6bffffffffffffffffffffffff1682602001516bffffffffffffffffffffffff168661069c919061128f565b6106a69190611300565b90508160000151819350935050509250929050565b60096020528060005260406000206000915090505481565b60038060000180546106e490611360565b80601f016020809104026020016040519081016040528092919081815260200182805461071090611360565b801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900461ffff16908060030160029054906101000a900460ff16905085565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161080c9190610ea8565b602060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d919061106d565b73ffffffffffffffffffffffffffffffffffffffff16036108a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089a906110e6565b60405180910390fd5b60006009600083815260200190815260200160002054116108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f0906113dd565b60405180910390fd5b346009600083815260200190815260200160002054111561094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690611449565b60405180910390fd5b60008061095c83346104d1565b915091508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109a6573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610a029190610ea8565b602060405180830381865afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a43919061106d565b73ffffffffffffffffffffffffffffffffffffffff166108fc8234610a689190611469565b9081150290604051600060405180830381858888f19350505050158015610a93573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610b2d9190610ea8565b602060405180830381865afa158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e919061106d565b33866040518463ffffffff1660e01b8152600401610b8e9392919061149d565b600060405180830381600087803b158015610ba857600080fd5b505af1158015610bbc573d6000803e3d6000fd5b5050505060006009600085815260200190815260200160002081905550505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000612710905090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c8c81610c57565b8114610c9757600080fd5b50565b600081359050610ca981610c83565b92915050565b600060208284031215610cc557610cc4610c52565b5b6000610cd384828501610c9a565b91505092915050565b60008115159050919050565b610cf181610cdc565b82525050565b6000602082019050610d0c6000830184610ce8565b92915050565b6000819050919050565b610d2581610d12565b8114610d3057600080fd5b50565b600081359050610d4281610d1c565b92915050565b60008060408385031215610d5f57610d5e610c52565b5b6000610d6d85828601610d33565b9250506020610d7e85828601610d33565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dcd610dc8610dc384610d88565b610da8565b610d88565b9050919050565b6000610ddf82610db2565b9050919050565b6000610df182610dd4565b9050919050565b610e0181610de6565b82525050565b6000602082019050610e1c6000830184610df8565b92915050565b6000610e2d82610d88565b9050919050565b610e3d81610e22565b82525050565b610e4c81610d12565b82525050565b6000604082019050610e676000830185610e34565b610e746020830184610e43565b9392505050565b600060208284031215610e9157610e90610c52565b5b6000610e9f84828501610d33565b91505092915050565b6000602082019050610ebd6000830184610e43565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610efd578082015181840152602081019050610ee2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f2582610ec3565b610f2f8185610ece565b9350610f3f818560208601610edf565b610f4881610f09565b840191505092915050565b600061ffff82169050919050565b610f6a81610f53565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610fb057610faf610f70565b5b50565b6000819050610fc182610f9f565b919050565b6000610fd182610fb3565b9050919050565b610fe181610fc6565b82525050565b600060a08201905081810360008301526110018188610f1a565b90506110106020830187610e43565b61101d6040830186610e43565b61102a6060830185610f61565b6110376080830184610fd8565b9695505050505050565b61104a81610e22565b811461105557600080fd5b50565b60008151905061106781611041565b92915050565b60006020828403121561108357611082610c52565b5b600061109184828501611058565b91505092915050565b7f43616c6c6572206973206e6f7420746f6b656e206f776e65722e000000000000600082015250565b60006110d0601a83610ece565b91506110db8261109a565b602082019050919050565b600060208201905081810360008301526110ff816110c3565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f2e600082015250565b600061113c602083610ece565b915061114782611106565b602082019050919050565b6000602082019050818103600083015261116b8161112f565b9050919050565b7f416c72656164792073616c650000000000000000000000000000000000000000600082015250565b60006111a8600c83610ece565b91506111b382611172565b602082019050919050565b600060208201905081810360008301526111d78161119b565b9050919050565b60006040820190506111f36000830185610e34565b6112006020830184610e34565b9392505050565b61121081610cdc565b811461121b57600080fd5b50565b60008151905061122d81611207565b92915050565b60006020828403121561124957611248610c52565b5b60006112578482850161121e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129a82610d12565b91506112a583610d12565b92508282026112b381610d12565b915082820484148315176112ca576112c9611260565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061130b82610d12565b915061131683610d12565b925082611326576113256112d1565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061137857607f821691505b60208210810361138b5761138a611331565b5b50919050565b7f4e6f742073616c652e0000000000000000000000000000000000000000000000600082015250565b60006113c7600983610ece565b91506113d282611391565b602082019050919050565b600060208201905081810360008301526113f6816113ba565b9050919050565b7f43616c6c65722073656e74206c6f776572207468616e2070726963652e000000600082015250565b6000611433601d83610ece565b915061143e826113fd565b602082019050919050565b6000602082019050818103600083015261146281611426565b9050919050565b600061147482610d12565b915061147f83610d12565b925082820390508181111561149757611496611260565b5b92915050565b60006060820190506114b26000830186610e34565b6114bf6020830185610e34565b6114cc6040830184610e43565b94935050505056fea26469706673582212207b47acdadfdaf8216c9381af17dcb1ef6cf41cb8ac6ce8e923509b97c1b623b864736f6c63430008110033";

type Concert_V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Concert_V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Concert_V1__factory extends ContractFactory {
  constructor(...args: Concert_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _royaltyFeesInBips: PromiseOrValue<BigNumberish>,
    _nftContractAddress: PromiseOrValue<string>,
    _artistAddress: PromiseOrValue<string>,
    _concertName: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _limitOfDate: PromiseOrValue<BigNumberish>,
    _availableSeats: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Concert_V1> {
    return super.deploy(
      _royaltyFeesInBips,
      _nftContractAddress,
      _artistAddress,
      _concertName,
      _price,
      _limitOfDate,
      _availableSeats,
      overrides || {}
    ) as Promise<Concert_V1>;
  }
  override getDeployTransaction(
    _royaltyFeesInBips: PromiseOrValue<BigNumberish>,
    _nftContractAddress: PromiseOrValue<string>,
    _artistAddress: PromiseOrValue<string>,
    _concertName: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _limitOfDate: PromiseOrValue<BigNumberish>,
    _availableSeats: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _royaltyFeesInBips,
      _nftContractAddress,
      _artistAddress,
      _concertName,
      _price,
      _limitOfDate,
      _availableSeats,
      overrides || {}
    );
  }
  override attach(address: string): Concert_V1 {
    return super.attach(address) as Concert_V1;
  }
  override connect(signer: Signer): Concert_V1__factory {
    return super.connect(signer) as Concert_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Concert_V1Interface {
    return new utils.Interface(_abi) as Concert_V1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Concert_V1 {
    return new Contract(address, _abi, signerOrProvider) as Concert_V1;
  }
}
